/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'scala'
apply plugin: 'eclipse'
compileTestScala.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://maven.wso2.org/nexus/content/repositories/public/org/ballerinalang" }
    maven { url "http://maven.wso2.org/nexus/content/groups/wso2-public" }
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    outputs.upToDateWhen { false } // force tests to run every time
}

dependencies {
    compile "org.scala-lang:scala-library:${gradle.scala.version}"
    compile "org.apache.openwhisk:openwhisk-tests:${gradle.openwhisk.version}:tests"
    compile "org.apache.openwhisk:openwhisk-tests:${gradle.openwhisk.version}:test-sources"
    compile "org.ballerinalang:ballerina-core:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-lang:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-grpc:${gradle.ballerina.version}"
    compile "org.ballerinalang:protobuf-ballerina:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-builtin:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-http:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-transactions:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-database:${gradle.ballerina.version}"
    compile "org.ballerinalang:ballerina-micrometer-extension:${gradle.ballerina.version}"
    compile "org.slf4j:slf4j-api:1.7.22"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = gradle.scala.compileFlags
}
